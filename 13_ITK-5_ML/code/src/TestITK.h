/**
\file TestITK.h

\brief This is an example to show how templated classes can be written without inheriting from ITK styles
*/

#pragma once

#include "itkImage.h"

using ImageTypeFloat3D = itk::Image< float, 3 >; //! default image types, always helpful to have
using ImageTypeFloat2D = itk::Image< float, 2 >; //! default image types, always helpful to have

// this is the default template type of the class and is always generated by the compiler
// comment it out and use an alias for the template name when writing the code
// this makes Intellisense easier to use and you will be able to see the derived members of the template
// using TImageType = ImageTypeFloat3D; // use this only during development
template< class TImageType = ImageTypeFloat3D >
class TestITK
{
public:
  //! Default constructor
  TestITK();

  //! Default Destructor
  ~TestITK();

  //! Example of a function that uses the default class template
  void memberFunctionUsingClassTemplate(typename TImageType::Pointer input);

  //! Example of a function that uses the default class template and another for its own nefarious purposes
  template< class TSpecialImageType = ImageTypeFloat2D >
  void memberFunctionUsingClassAndAnotherTemplate(typename TImageType::Pointer input, typename TSpecialImageType::Pointer anotherImage);

private:
  // initialize member variables here; note that all member variables inherit the default template type of the class
  typename TImageType::Pointer m_inputImage;
};

#include "TestITK.hxx"